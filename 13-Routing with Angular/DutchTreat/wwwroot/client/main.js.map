{"version":3,"sources":["./src/app/services/authActivator.service.ts","./src/environments/environment.ts","./src/app/services/store.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/pages/loginPage.component.html","./src/app/pages/loginPage.component.ts","./src/app/app.module.ts","./src/app/pages/checkout.component.html","./src/app/pages/checkout.component.ts","./src/app/router/index.ts","./src/app/pages/shopPage.component.ts","./src/app/pages/shopPage.component.html","./src/app/shared/Order.ts","./src/app/views/cartView.component.html","./src/app/views/cartView.component.ts","./src/app/views/productListView.component.html","./src/app/views/productListView.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["//DutchTreat\\client\\src\\app\\services\\authActivator.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Store } from './store.service';\r\n\r\n@Injectable()\r\nexport class AuthActivator implements CanActivate {\r\n    constructor(private store: Store, private router: Router) { }\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\r\n        : boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n        if (this.store.loginRequired) {\r\n            this.router.navigate(['login']);\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","//DutchTreat\\client\\src\\app\\services\\store.service.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\nimport { Product } from '../shared/Product';\r\nimport { Observable } from 'rxjs';\r\nimport { Order, OrderItem } from '../shared/Order';\r\nimport { LoginRequest, LoginResults } from './LoginResults';\r\n\r\n@Injectable()\r\nexport class Store {\r\n    public products: Product[] = [];\r\n    public order: Order = new Order();\r\n    public token = \"\";\r\n    public expiration = new Date();\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    loadProducts(): Observable<void> {\r\n        return this.http.get<Product[]>('/api/products')\r\n            .pipe(map(data => {\r\n                this.products = data;\r\n                return;\r\n            }));\r\n    }\r\n\r\n    get loginRequired(): boolean {\r\n        return this.token.length === 0 || this.expiration < new Date();\r\n    }\r\n\r\n    login(creds: LoginRequest) {\r\n        return this.http.post<LoginResults>('/account/createtoken', creds)\r\n            .pipe(map(data => {\r\n                this.token = data.token;\r\n                this.expiration = data.expiration;\r\n            }));\r\n    }\r\n\r\n    addToOrder(product: Product) {\r\n        let item: OrderItem;\r\n\r\n        item = this.order.items.find(o => o.productId === product.id);\r\n\r\n        if (item) {\r\n            item.quantity++;\r\n        } else {\r\n            item = new OrderItem();\r\n            item.productId = product.id;\r\n            item.productTitle = product.title;\r\n            item.productArtId = product.artId;\r\n            item.productArtist = product.artist;\r\n            item.productCategory = product.category;\r\n            item.productSize = product.size;\r\n            item.unitPrice = product.price;\r\n            item.quantity = 1;\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n\r\n    checkout() {\r\n        const headers = new HttpHeaders().set('Authorization', `Bearer ${this.token}`);\r\n        return this.http.post('/api/orders', this.order, {\r\n            headers: headers\r\n        }).pipe(map(data => {\r\n            this.order = new Order();\r\n        }));\r\n    }\r\n}","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'the-shop',\n    templateUrl: 'app.component.html',\n    styles: []\n})\nexport class AppComponent {\n    title = 'Shop';\n}","<!--DutchTreat\\client\\src\\app\\app.component.html-->\r\n<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <h3>{{ title }}</h3>\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","<!--DutchTreat\\client\\src\\app\\pages\\loginPage.component.html-->\n<div class=\"row\">\n    <div class=\"col-md-4 col-md-offset-4\">\n        <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div>\n        <form (submit)=\"onLogin()\">\n            <div class=\"form-group\">\n                <label for=\"username\">Username</label>\n                <input type=\"text\" class=\"form-control\" #username=\"ngModel\" required\n                       name=\"name\" [(ngModel)]=\"creds.username\" />\n                <div class=\"text-danger\" *ngIf=\"username.touched && username.invalid\n                     && username.errors.required\">Username is required</div>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" class=\"form-control\" #password=\"ngModel\" required \n                       name=\"password\" [(ngModel)]=\"creds.password\" />\n                <div class=\"text-danger\" *ngIf=\"password.touched && password.invalid\n                     && password.errors.required\">Password is required</div>\n            </div>\n            <div class=\"form-group\">\n                <input type=\"submit\" class=\"btn btn-success\" value=\"Login\" \n                       [disabled]=\"username.invalid || password.invalid\" />\n                <a href=\"#\" class=\"btn btn-default\">Cancel</a>\n            </div>\n        </form>\n        <div>{{ creds | json }}</div>\n    </div>\n</div>","//DutchTreat\\client\\src\\app\\pages\\loginPage.component.ts\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { LoginRequest } from '../services/LoginResults';\r\nimport { Store } from '../services/store.service';\r\n\r\n@Component({\r\n    selector: 'login-page',\r\n    templateUrl: 'loginPage.component.html'\r\n})\r\nexport class LoginPage {\r\n    constructor(private store: Store, private router: Router) { }\r\n\r\n    public creds: LoginRequest = {\r\n        username: '',\r\n        password: ''\r\n    };\r\n\r\n    public errorMessage = '';\r\n\r\n    onLogin() {\r\n        this.store.login(this.creds).subscribe(() => {\r\n            // Successfully logged in\r\n            if (this.store.order.items.length > 0) {\r\n                this.router.navigate(['checkout']);\r\n            } else {\r\n                this.router.navigate(['']);\r\n            }\r\n        }, error => {\r\n            console.log(error);\r\n            this.errorMessage = \"Unable to login with given credentials!\";\r\n        });\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { Store } from './services/store.service';\r\nimport ProductListView from './views/productListView.component';\r\nimport { CartView } from './views/cartView.component';\r\nimport router from './router';\r\nimport { ShopPage } from './pages/shopPage.component';\r\nimport { CheckoutPage } from './pages/checkout.component';\r\nimport { LoginPage } from './pages/loginPage.component';\r\nimport { AuthActivator } from './services/authActivator.service';\r\n\r\n@NgModule({\r\n    declarations: [AppComponent, ProductListView, CartView, ShopPage, CheckoutPage, LoginPage],\r\n    imports: [BrowserModule, HttpClientModule, router, FormsModule],\r\n    providers: [Store, AuthActivator],\r\n    bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }","<!--DutchTreat\\client\\src\\app\\pages\\checkout.component.html-->\n<div class=\"row\">\n    <h3>Confirm Order</h3>\n    <div *ngIf=\"errorMessage\" class=\"alert alert-danger\">{{ errorMessage }}</div>\n    <table class=\"table table-bordered table-hover\">\n        <tr *ngFor=\"let o of store.order.items\">\n            <td><img src=\"/img/{{ o.productArtId }}.jpg\" alt=\"o.productTitle\" class=\"img-thumbnail checkout-thumb\" /></td>\n            <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\n            <td>{{ o.quantity }}</td>\n            <td>{{ o.unitPrice | currency }}</td>\n            <td>{{ (o.unitPrice * o.quantity) | currency }}</td>\n        </tr>\n    </table>\n    <div class=\"col-md-4 col-md-offset-8 text-right\">\n        <table class=\"table table-condensed\">\n            <tr>\n                <td class=\"text-right\">Subtotal</td>\n                <td class=\"text-right\">{{ store.order.subTotal | currency }}</td>\n            </tr>\n            <tr>\n                <td class=\"text-right\">Shipping</td>\n                <td class=\"text-right\">$ 0.00</td>\n            </tr>\n            <tr>\n                <td class=\"text-right\">Total:</td>\n                <td class=\"text-right\">{{ store.order.subTotal | currency }}</td>\n            </tr>\n        </table>\n        <button class=\"btn btn-success\" (click)=\"onCheckout()\">Complete Purchase</button>\n        <a routerLink=\"/\" class=\"btn btn-info\">Cancel</a>\n    </div>\n</div>","//DutchTreat\\client\\src\\app\\pages\\checkout.component.ts\nimport { Component } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\r\nimport { Store } from \"../services/store.service\";\r\n\n@Component({\n    selector: \"checkout\",\n    templateUrl: \"checkout.component.html\",\n    styleUrls: ['checkout.component.css']\n})\nexport class CheckoutPage {\n    public errorMessage = \"\";\n\n    constructor(public store: Store, private router: Router) {\n    }\n\n    onCheckout() {\n        this.errorMessage = \"\";\n        this.store.checkout().subscribe(() => {\n            this.router.navigate(['/']);\n        }, err => {\n            this.errorMessage = `Failed to checkout: ${err}`;\n        });\n    }\n}","//DutchTreat\\client\\src\\app\\router\\index.ts\r\nimport { RouterModule } from '@angular/router';\r\nimport { CheckoutPage } from '../pages/checkout.component';\r\nimport { LoginPage } from '../pages/loginPage.component';\r\nimport { ShopPage } from '../pages/shopPage.component';\r\nimport { AuthActivator } from '../services/authActivator.service';\r\n\r\nconst routes = [\r\n    { path: '', component: ShopPage },\r\n    { path: 'checkout', component: CheckoutPage, canActivate: [AuthActivator] },\r\n    { path: 'login', component: LoginPage },\r\n    { path: '**', redirectTo: '/' },\r\n];\r\nconst router = RouterModule.forRoot(routes);\r\nexport default router;","//DutchTreat\\client\\src\\app\\pages\\shopPage.component.ts\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'shop-page',\r\n    templateUrl: 'shopPage.component.html',\r\n})\r\nexport class ShopPage {\r\n}","<!--DutchTreat\\client\\src\\app\\pages\\shopPage.component.html-->\r\n<div class=\"row\">\r\n    <div class=\"col-9\">\r\n        <product-list></product-list>\r\n    </div>\r\n    <div class=\"col-3\">\r\n        <cart></cart>\r\n    </div>\r\n</div>","//DutchTreat\\client\\src\\app\\shared\\Order.ts\r\nexport class OrderItem {\r\n    id: number;\r\n    quantity: number;\r\n    unitPrice: number;\r\n    productId: number;\r\n    productCategory: string;\r\n    productSize: string;\r\n    productTitle: string;\r\n    productArtist: string;\r\n    productArtId: string;\r\n}\r\n\r\nexport class Order {\r\n    orderId: number;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string = Math.random().toString(36).substr(2, 5);\r\n    items: OrderItem[] = [];\r\n\r\n    get subTotal(): number {\r\n        const result = this.items.reduce((tot, val) => {\r\n            return tot + (val.unitPrice * val.quantity);\r\n        }, 0);\r\n\r\n        return result;\r\n    }\r\n}","<!--DutchTreat\\client\\src\\app\\views\\cartView.component.html-->\r\n<h3>Cart</h3>\r\n<div>Count: {{ store.order.items.length }}</div>\r\n<table class=\"table table-striped table-sm\">\r\n    <thead>\r\n        <tr>\r\n            <th></th>\r\n            <th>Product</th>\r\n            <th>Quantity</th>\r\n            <th>Price</th>\r\n            <th>Total</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let item of store.order.items\">\r\n            <td>\r\n                <img src=\"/img/{{item.productArtId}}.jpg\" alt=\"{{item.productArtist}}\"\r\n                     class=\"img-fluid product-thumb\"/>\r\n            </td>\r\n            <td>{{ item.productCategory }}</td>\r\n            <td>{{ item.quantity }}</td>\r\n            <td>{{ item.unitPrice | currency }}</td>\r\n            <td>{{ item.unitPrice * item.quantity | currency }}</td>\r\n        </tr>\r\n    </tbody>\r\n    <tfoot>\r\n        <tr>\r\n            <td colspan=\"5\">Subtotal: {{ store.order.subTotal | currency }}</td>\r\n        </tr>\r\n    </tfoot>\r\n</table>\r\n<a class=\"btn btn-success\" *ngIf=\"store.order.items.length > 0\" routerLink=\"checkout\">Checkout</a>\r\n<hr />","import { Component } from '@angular/core';\r\nimport { Store } from '../services/store.service';\r\n\r\n@Component({\r\n    selector: 'cart',\r\n    templateUrl: 'cartView.component.html',\r\n    styleUrls: ['cartView.component.css']\r\n})\r\nexport class CartView {\r\n    constructor(public store: Store) {\r\n\r\n    }\r\n}","<!--DutchTreat\\client\\src\\app\\views\\productListView.component.html-->\r\n<div class=\"row\">\r\n    <div *ngFor=\"let p of store.products\" class=\"col-md-4\">\r\n        <div class=\"border bg-light rounded p-1\">\r\n            <img src=\"/img/{{p.artId}}.jpg\" class=\"img-fluid product-image\" alt=\"{{p.title}}\" />\r\n            <h5>{{ p.category }} - {{ p.size }}</h5>\r\n            <ul class=\"products-props\">\r\n                <li>Price: {{ p.price | currency: 'INR' }}</li>\r\n                <li>Artist: {{ p.artist }}</li>\r\n                <li>Title: {{ p.title }}</li>\r\n                <li>{{ p.artDescription }}</li>\r\n            </ul>\r\n            <button id=\"buyButton\" class=\"btn btn-success\" (click)=\"store.addToOrder(p)\">Buy</button>\r\n        </div>\r\n    </div>\r\n</div>","//DutchTreat\\client\\src\\app\\views\\productListView.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Store } from '../services/store.service';\r\n\r\n@Component({\r\n    selector: 'product-list',\r\n    templateUrl: 'productListView.component.html',\r\n    styleUrls: ['productListView.component.css']\r\n})\r\n\r\nexport default class ProductListView implements OnInit {\r\n    constructor(public store: Store) {\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.store.loadProducts()\r\n            .subscribe(val => {\r\n                // do something\r\n            });\r\n    }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}